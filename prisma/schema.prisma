// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id String @id @default(cuid())
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? //@db.Text
  access_token      String? //@db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? //@db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model VideoChatUser {
  id            String  @id @default(cuid())
  name          String
  contact       String
  status        String  @default("waiting")
  sourceMatches Match[] @relation("SourceMatches")
  endMatches    Match[] @relation("endMatches")
}

model Match {
  id                 String        @id @default(cuid())
  sourceUserId       String
  endsOn             String?
  sourceUser         VideoChatUser @relation(name: "SourceMatches", fields: [sourceUserId], references: [id], onDelete: Cascade)
  sourceUserJoined   Boolean       @default(false)
  endUserId          String
  endUserJoined      Boolean       @default(false)
  endUser            VideoChatUser @relation(name: "endMatches", fields: [endUserId], references: [id], onDelete: Cascade)
  status             String        @default("waiting")
  sourceUserFeedback String?
  endUserFeedback    String?
}
